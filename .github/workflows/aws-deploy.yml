name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - master
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Node dependencies
      run: npm ci
      
    - name: Maven compile
      run: mvn compile
      
    - name: Run JUnit Tests
      run: mvn test -DexcludedGroups="manual"
      
    - name: Upload JUnit test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: junit-test-results
        path: target/surefire-reports/
      
    - name: Run Jest Tests
      run: npm test || echo "Jest tests failed or not found, continuing workflow"
      continue-on-error: true
      
    - name: Upload Jest test results
      if: always()
      continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: jest-test-results
        path: coverage/
      
    - name: Build with Maven
      run: mvn clean package -DskipTests
      
    - name: Generate deployment package
      run: |
        mkdir -p deployment
        cp target/game-recommendation-system-1.0-SNAPSHOT.jar deployment/
        cp Procfile deployment/
        cd deployment && zip -r ../deploy.zip .
      
    - name: Deploy to Elastic Beanstalk
      if: success()
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: game-recommender
        environment_name: game-recommender-env
        version_label: ${{ github.sha }}
        region: ${{ secrets.AWS_REGION }}
        deployment_package: deploy.zip
        wait_for_deployment: true
        
    - name: Notify on test or deployment failure
      if: failure()
      run: |
        echo "Tests or deployment failed. Please check the logs for details."
        # You could add notification steps here (email, Slack, etc.)
